<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maxy.caller.persistent.mapper.TaskLogMapper">
  <resultMap id="BaseResultMap" type="com.maxy.caller.model.TaskLog">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="group_key" jdbcType="VARCHAR" property="groupKey" />
    <result column="biz_key" jdbcType="VARCHAR" property="bizKey" />
    <result column="topic" jdbcType="VARCHAR" property="topic" />
    <result column="execute_param" jdbcType="VARCHAR" property="executeParam" />
    <result column="executor_time" jdbcType="TIMESTAMP" property="executorTime" />
    <result column="executor_address" jdbcType="VARCHAR" property="executorAddress" />
    <result column="retry_count" jdbcType="TINYINT" property="retryCount" />
    <result column="executor_status" jdbcType="TINYINT" property="executorStatus" />
    <result column="executor_result_msg" jdbcType="VARCHAR" property="executorResultMsg" />
    <result column="alarm_status" jdbcType="TINYINT" property="alarmStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, group_key, biz_key, topic, execute_param, executor_time, executor_address, retry_count, 
    executor_status, executor_result_msg, alarm_status, create_time
  </sql>
  <select id="selectByExample" parameterType="com.maxy.caller.persistent.example.TaskLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from task_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from task_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.maxy.caller.persistent.example.TaskLogExample">
    delete from task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.maxy.caller.model.TaskLog" useGeneratedKeys="true">
    insert into task_log (group_key, biz_key, topic, 
      execute_param, executor_time, executor_address, 
      retry_count, executor_status, executor_result_msg, 
      alarm_status, create_time)
    values (#{groupKey,jdbcType=VARCHAR}, #{bizKey,jdbcType=VARCHAR}, #{topic,jdbcType=VARCHAR}, 
      #{executeParam,jdbcType=VARCHAR}, #{executorTime,jdbcType=TIMESTAMP}, #{executorAddress,jdbcType=VARCHAR}, 
      #{retryCount,jdbcType=TINYINT}, #{executorStatus,jdbcType=TINYINT}, #{executorResultMsg,jdbcType=VARCHAR}, 
      #{alarmStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.maxy.caller.model.TaskLog" useGeneratedKeys="true">
    insert into task_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="groupKey != null">
        group_key,
      </if>
      <if test="bizKey != null">
        biz_key,
      </if>
      <if test="topic != null">
        topic,
      </if>
      <if test="executeParam != null">
        execute_param,
      </if>
      <if test="executorTime != null">
        executor_time,
      </if>
      <if test="executorAddress != null">
        executor_address,
      </if>
      <if test="retryCount != null">
        retry_count,
      </if>
      <if test="executorStatus != null">
        executor_status,
      </if>
      <if test="executorResultMsg != null">
        executor_result_msg,
      </if>
      <if test="alarmStatus != null">
        alarm_status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="groupKey != null">
        #{groupKey,jdbcType=VARCHAR},
      </if>
      <if test="bizKey != null">
        #{bizKey,jdbcType=VARCHAR},
      </if>
      <if test="topic != null">
        #{topic,jdbcType=VARCHAR},
      </if>
      <if test="executeParam != null">
        #{executeParam,jdbcType=VARCHAR},
      </if>
      <if test="executorTime != null">
        #{executorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executorAddress != null">
        #{executorAddress,jdbcType=VARCHAR},
      </if>
      <if test="retryCount != null">
        #{retryCount,jdbcType=TINYINT},
      </if>
      <if test="executorStatus != null">
        #{executorStatus,jdbcType=TINYINT},
      </if>
      <if test="executorResultMsg != null">
        #{executorResultMsg,jdbcType=VARCHAR},
      </if>
      <if test="alarmStatus != null">
        #{alarmStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.maxy.caller.persistent.example.TaskLogExample" resultType="java.lang.Long">
    select count(*) from task_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update task_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.groupKey != null">
        group_key = #{record.groupKey,jdbcType=VARCHAR},
      </if>
      <if test="record.bizKey != null">
        biz_key = #{record.bizKey,jdbcType=VARCHAR},
      </if>
      <if test="record.topic != null">
        topic = #{record.topic,jdbcType=VARCHAR},
      </if>
      <if test="record.executeParam != null">
        execute_param = #{record.executeParam,jdbcType=VARCHAR},
      </if>
      <if test="record.executorTime != null">
        executor_time = #{record.executorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.executorAddress != null">
        executor_address = #{record.executorAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.retryCount != null">
        retry_count = #{record.retryCount,jdbcType=TINYINT},
      </if>
      <if test="record.executorStatus != null">
        executor_status = #{record.executorStatus,jdbcType=TINYINT},
      </if>
      <if test="record.executorResultMsg != null">
        executor_result_msg = #{record.executorResultMsg,jdbcType=VARCHAR},
      </if>
      <if test="record.alarmStatus != null">
        alarm_status = #{record.alarmStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update task_log
    set id = #{record.id,jdbcType=BIGINT},
      group_key = #{record.groupKey,jdbcType=VARCHAR},
      biz_key = #{record.bizKey,jdbcType=VARCHAR},
      topic = #{record.topic,jdbcType=VARCHAR},
      execute_param = #{record.executeParam,jdbcType=VARCHAR},
      executor_time = #{record.executorTime,jdbcType=TIMESTAMP},
      executor_address = #{record.executorAddress,jdbcType=VARCHAR},
      retry_count = #{record.retryCount,jdbcType=TINYINT},
      executor_status = #{record.executorStatus,jdbcType=TINYINT},
      executor_result_msg = #{record.executorResultMsg,jdbcType=VARCHAR},
      alarm_status = #{record.alarmStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.maxy.caller.model.TaskLog">
    update task_log
    <set>
      <if test="groupKey != null">
        group_key = #{groupKey,jdbcType=VARCHAR},
      </if>
      <if test="bizKey != null">
        biz_key = #{bizKey,jdbcType=VARCHAR},
      </if>
      <if test="topic != null">
        topic = #{topic,jdbcType=VARCHAR},
      </if>
      <if test="executeParam != null">
        execute_param = #{executeParam,jdbcType=VARCHAR},
      </if>
      <if test="executorTime != null">
        executor_time = #{executorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executorAddress != null">
        executor_address = #{executorAddress,jdbcType=VARCHAR},
      </if>
      <if test="retryCount != null">
        retry_count = #{retryCount,jdbcType=TINYINT},
      </if>
      <if test="executorStatus != null">
        executor_status = #{executorStatus,jdbcType=TINYINT},
      </if>
      <if test="executorResultMsg != null">
        executor_result_msg = #{executorResultMsg,jdbcType=VARCHAR},
      </if>
      <if test="alarmStatus != null">
        alarm_status = #{alarmStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.maxy.caller.model.TaskLog">
    update task_log
    set group_key = #{groupKey,jdbcType=VARCHAR},
      biz_key = #{bizKey,jdbcType=VARCHAR},
      topic = #{topic,jdbcType=VARCHAR},
      execute_param = #{executeParam,jdbcType=VARCHAR},
      executor_time = #{executorTime,jdbcType=TIMESTAMP},
      executor_address = #{executorAddress,jdbcType=VARCHAR},
      retry_count = #{retryCount,jdbcType=TINYINT},
      executor_status = #{executorStatus,jdbcType=TINYINT},
      executor_result_msg = #{executorResultMsg,jdbcType=VARCHAR},
      alarm_status = #{alarmStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

</mapper>