<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.maxy.caller.persistent.mapper.TaskDetailInfoExtendMapper">
    <resultMap id="BaseResultMap" type="com.maxy.caller.model.TaskDetailInfo">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="group_key" jdbcType="VARCHAR" property="groupKey"/>
        <result column="biz_key" jdbcType="VARCHAR" property="bizKey"/>
        <result column="topic" jdbcType="VARCHAR" property="topic"/>
        <result column="execution_status" jdbcType="TINYINT" property="executionStatus"/>
        <result column="execution_time" jdbcType="TIMESTAMP" property="executionTime"/>
        <result column="execution_param" jdbcType="VARCHAR" property="executionParam"/>
        <result column="timeout" jdbcType="INTEGER" property="timeout"/>
        <result column="retry_num" jdbcType="TINYINT" property="retryNum"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="java.util.List"
            useGeneratedKeys="true">
        insert into task_detail_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            group_key, biz_key, topic, execution_param, execution_time, execution_status,
            timeout, retry_num, create_time, update_time
        </trim>
        values
        <foreach collection="taskDetailInfoList" item="taskDetailInfo" index="index" separator=",">
            <trim prefix="(" suffix=")" suffixOverrides=",">
                #{taskDetailInfo.groupKey,jdbcType=VARCHAR},
                #{taskDetailInfo.bizKey,jdbcType=VARCHAR},
                #{taskDetailInfo.topic,jdbcType=VARCHAR},
                #{taskDetailInfo.executionParam,jdbcType=VARCHAR},
                #{taskDetailInfo.executionTime,jdbcType=TIMESTAMP},
                1,
                #{taskDetailInfo.timeout,jdbcType=INTEGER},
                #{taskDetailInfo.retryNum,jdbcType=TINYINT},
                now(),now()

            </trim>
        </foreach>
    </insert>
    <select id="getPreReadInfo" parameterType="com.maxy.caller.persistent.example.TaskDetailInfoExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        id, group_key, biz_key, topic, execution_status, execution_time, execution_param,
        timeout, retry_num
        from task_detail_info
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <update id="updateStatusByIds" parameterType="com.maxy.caller.persistent.example.TaskDetailInfoExample">
        update task_detail_info set execution_status = #{targetStatus} where id in
        <foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
            #{item}
        </foreach>
        and execution_status = #{sourceStatus}
    </update>
</mapper>